#include <stdio.h>
#include <string.h>
#include <ctype.h>

char matrix[5][5];

void generateMatrix(char key[]) {
    int used[26] = {0}, k = 0;
    for (int i = 0; key[i]; i++) {
        char ch = toupper(key[i]);
        if (ch == 'J') ch = 'I';
        if (isalpha(ch) && !used[ch - 'A']) { matrix[k/5][k%5] = ch; used[ch-'A']=1; k++; }
    }
    for (int i=0;i<26;i++) if(i+'A'!='J' && !used[i]) matrix[k/5][k%5] = i+'A', k++;
}

void prepareText(char text[], char prepared[]) {
    int k=0;
    for(int i=0; text[i]; i++) {
        char ch=toupper(text[i]); if(ch=='J') ch='I';
        if(!isalpha(ch)) continue;
        prepared[k++]=ch;
        if(i<strlen(text)-1 && ch==toupper(text[i+1])) prepared[k++]='X';
    }
    if(k%2) prepared[k++]='X';
    prepared[k]='\0';
}

void findPos(char ch,int *r,int *c){for(int i=0;i<5;i++)for(int j=0;j<5;j++)if(matrix[i][j]==ch){*r=i;*c=j;return;}}

void playfairEncrypt(char text[], char encrypted[]) {
    int k=0;
    for(int i=0;i<strlen(text);i+=2){
        int r1,c1,r2,c2;
        findPos(text[i],&r1,&c1); findPos(text[i+1],&r2,&c2);
        if(r1==r2){ encrypted[k++]=matrix[r1][(c1+1)%5]; encrypted[k++]=matrix[r2][(c2+1)%5]; }
        else if(c1==c2){ encrypted[k++]=matrix[(r1+1)%5][c1]; encrypted[k++]=matrix[(r2+1)%5][c2]; }
        else{ encrypted[k++]=matrix[r1][c2]; encrypted[k++]=matrix[r2][c1]; }
    }
    encrypted[k]='\0';
}

int main() {
    char key[50], text[100], prepared[200], encrypted[200];
    fgets(key,sizeof(key),stdin); key[strcspn(key,"\n")]=0;
    fgets(text,sizeof(text),stdin); text[strcspn(text,"\n")]=0;
    generateMatrix(key); prepareText(text,prepared); playfairEncrypt(prepared,encrypted);
    printf("Encrypted: %s\n",encrypted);
    return 0;
}
